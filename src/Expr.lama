-- Expression evaluator

import List;
import State;

public fun evalExpr (st, expr) {
 case expr of
      Const(x) -> x
     |Var(x) -> st(x)
     |Binop(opr , l , r) -> evalBinOp(opr, evalExpr(st,l) , evalExpr(st,r))
  esac
}



public fun evalBinOp(opr , l , r) {
       case opr of
      "+" -> l+r
      |"-" -> l-r
      |"*" -> l*r
      |"/" -> l/r
      |"%" -> l%r
      |"==" -> l==r
      |"!=" -> l!=r
      |">" -> l>r
      |"<" -> l<r
      |">=" -> l>=r
      |"<=" -> l<=r
      |"&&" -> l&&r
      |"!!" -> l!!r
  esac
}

